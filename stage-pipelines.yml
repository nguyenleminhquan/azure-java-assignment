trigger:
  - stage

resources:
  - repo: self

variables:
  containerRegistry: 'Connect to Docker Hub'
  repository: nguyenleminhquan/java-assignment
  tag: $(Build.BuildId)

stages:
  - stage: Build_and_push
    displayName: Build and push image to Docker Hub
    pool:
      vmImage: ubuntu-20.04
    jobs:
      - job: Build_and_push_image
        displayName: Build and push image
        steps:
          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: $(containerRegistry)
          - task: Docker@2
            displayName: Build image
            inputs:
              command: build
              repository: $(repository)
              tags: $(tag)
          - task: Bash@3
            displayName: Export tag
            inputs:
              targetType: inline
              script: export TESTTAG=$(tag)
          - task: Bash@3
            displayName: Run Docker container
            inputs:
              targetType: inline
              script: docker container run -d $(repository):$(tag)
          - task: Bash@3
            displayName: Health check
            inputs:
              targetType: inline
              script: |
                chmod +x healthcheck.sh
                ./healthcheck.sh
          - task: Docker@2
            displayName: Push image
            inputs:
              command: push
              repository: $(repository)
              tags: $(tag)

  - stage: Deploy_to_Kubernetes
    displayName: Deploy to Kubernetes
    pool:
      name: EP
    jobs:
      - job: Connect_remote
        displayName: Connect to remote server
        steps:
          - task: Bash@3
            displayName: Update image tag
            inputs:
              targetType: inline
              script: | 
                chmod +x exportTagStage.sh
                . ./exportTagStage.sh
                sed -i "s/$TAG/$(Build.BuildId)/" deployment.yaml
          - task: Bash@3
            displayName: Deploy to Kubernetes cluster
            inputs:
              workingDirectory: $(System.DefaultWorkingDirectory)
              targetType: inline
              script: kubectl apply -f deployment.yaml
