# Trigger
trigger: 
  - dev
      
resources:
  - repo: self 

variables:
  containerRegistry: 'Connect to Docker Hub'
  repository: nguyenleminhquan/java-assignment

# Define stages 
stages:
  - stage: Build_and_push
    displayName: Build and push image to Docker Hub   
    pool:
      vmImage: ubuntu-20.04
    jobs:
      - job: Build_image
        steps:
          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: $(containerRegistry)
          - task: Docker@2
            displayName: Build image
            inputs:
              command: build
              repository: $(repository)
              tags: $(Build.BuildId)
            continueOnError: false
          - task: Bash@3
            displayName: Export tag
            inputs:
              targetType: inline
              script: export TESTTAG=$(Build.BuildId)
          - task: Bash@3
            displayName: Create an container for testing
            inputs:
              targetType: inline
              script: docker container run -d nguyenleminhquan/java-assignment:$(Build.BuildId)
          - task: Bash@3
            displayName: Health check
            inputs:
              targetType: inline
              script: |
                chmod +x healthcheck.sh 
                ./healthcheck.sh
          - task: Docker@2
            displayName: Push image
            inputs:
              command: push
              repository: $(repository)
              tags: $(Build.BuildId)
  # - stage: Deploy
  #   displayName: Deploy using docker-compose
  #   pool:
  #     name: EP
  #   jobs:
  #     - job: Deploy
  #       displayName: Deploy to EP 
  #       steps:
  #         - task: Bash@3
  #           displayName: Update tag for image before building
  #           inputs:
  #             targetType: inline
  #             script: |
  #               chmod +x exportTagDev.sh
  #               . ./exportTagDev.sh
  #               sed -i "s/$TAG/$(Build.BuildId)/" docker-compose.yml
  #         - task: DockerCompose@0
  #           displayName: Deploy using docker-compose
  #           inputs:
  #             containerregistrytype: Container Registry
  #             dockerRegistryEndpoint: $(containerRegistry)
  #             dockerComposeCommand: 'up -d'
  #             dockerComposeFile: docker-compose.yml