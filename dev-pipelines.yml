# Trigger
trigger: 
  - dev
      
resources:
  - repo: self 

variables:
  - group: java-docker-hub
  - group: header-request

# Define stages 
stages:
  - stage: Build_Dev
    displayName: Build_Dev
    pool:
      vmImage: ubuntu-20.04
    jobs:
      - job: Build_image
        displayName: Build image
        steps:
          - task: Docker@2
            displayName: Login to Docker Hub
            inputs:
              command: login
              containerRegistry: $(containerRegistry)
          - task: Docker@2
            displayName: Build image
            inputs:
              command: build
              repository: $(repository)
              tags:
                $(tag)
          - task: Bash@3
            displayName: Create an container for testing
            inputs:
              targetType: inline
              script: docker container run -d --name healthcheck -p 85:5000 $(repository):$(tag) 
          - task: Bash@3
            displayName: Health check
            inputs:
              targetType: inline
              script: |
                chmod +x healthcheck.sh 
                . ./healthcheck.sh
          - task: Docker@2
            displayName: Push image
            inputs:
              command: push
              repository: $(repository)
              tags: 
                $(tag)
          - task: Bash@3
            displayName: Retag image to latest
            inputs:
              targetType: inline
              script: |
                docker tag $(repository):$(tag) $(repository):latest
          - task: Docker@2  
            displayName: Push image with latest tag
            inputs:
              command: push
              repository: $(repository)
              tags: latest
  - stage: Deploy_Dev_QC
    displayName: Deploy Dev QC
    pool:
      name: EP
    jobs:
      - job: Deploy
        displayName: Deploy for QC
        steps:
          - task: Bash@3
            displayName: Remove old container
            inputs:
              targetType: inline
              script: |
                chmod +x removeContainer.sh
                . ./removeContainer.sh $(Build.SourceBranch)
          - task: Bash@3
            displayName: Run container  
            inputs:
              targetType: inline
              script: docker container run --name hc -d -p 99:5000 $(repository):stable
          - task: Bash@3
            displayName: Health check URL
            inputs:
              targetType: inline
              script: |
                chmod +x healthcheckURL.sh
                . ./healthcheckURL.sh
  - stage: QA
    displayName: QA
    pool:
      vmImage: ubuntu-20.04
    jobs:
      - job: Smoke_test
        displayName: Smoke test
        steps:
          - script: echo "Run test"
          # - task: Bash@3
          #   displayName: Make HTTP POST request
          #   env:
          #     AUTHOR: $(authorization_1)
          #     COOKIE: $(cookie_1)
          #   inputs:
          #     targetType: inline
          #     script: |
          #       chmod +x makePOST.sh
          #       . ./makePOST.sh $AUTHOR $COOKIE
          # - task: Bash@3
          #   displayName: Run test
          #   env:
          #     AUTHOR: $(authorization_1)
          #     COOKIE: $(cookie_1)
          #   inputs:
          #     targetType: inline
          #     script: |
          #       npm i axios
          #       node stageQA.js $AUTHOR $COOKIE
  - stage: Deploy_Dev
    displayName: Deploy  Dev
    pool:
      name: EP
    jobs:
      - job: Deploy
        displayName: Deploy to Dev
        steps:
          - task: Bash@3
            displayName: Remove old container 
            inputs:
              targetType: inline
              script: |
                chmod +x removeContainer.sh
                . ./removeContainer.sh $(Build.SourceBranch)
          - task: Bash@3
            displayName: Update tag for image before deploying
            inputs:
              targetType: inline
              script: |
                chmod +x exportTagDev.sh
                . ./exportTagDev.sh
                sed -i "s/$TAG/$(tag)/" docker-compose.yml
          - task: DockerCompose@0
            displayName: Deploy using docker-compose
            inputs:
              containerregistrytype: Container Registry
              dockerRegistryEndpoint: $(containerRegistry)
              dockerComposeCommand: 'up -d'
              dockerComposeFile: docker-compose.yaml